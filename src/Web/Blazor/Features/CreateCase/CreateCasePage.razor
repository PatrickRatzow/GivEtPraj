@page "/create-page"
@using Blazor.Services
@using BrowserInterop.Geolocation

<PageTitle>Opret Praj</PageTitle>

<div>
    @if (HasSentCase)
    {
        <h1 style="color:limegreen;text-align:center;">Tak for prajet!</h1>
    }
    else
    {
        <h1>Giv Et Praj!</h1>
        
        <div>
            <label>Titel</label>
            <input type="text" @bind="@Title"/>
        </div>
        <div>
            <label>Beskrivelse</label>
            <input type="text" @bind="@Description"/>
        </div>
        <div>
            <label>Billeder</label>
            <input type="file" @ref="_input" @onchange="UpdateImages" accept=".jpg, .jpeg, png" />
        </div>

        <button @onclick="GetLatLong">Get location</button>
        <text>@Latitude</text><br />
        <text>@Longitude</text>

        <button @onclick="@SubmitCase">Giv Prajet</button>   
    }
</div>

@code {
    private ElementReference _input;
    [Inject] private ICaseService CaseService { get; set; }
    [Inject] private ImageUpload ImageUpload { get; set; }
    [Inject] private IGeoLocationService GeoLocationService { get; set; }
    private string Title { get; set; }
    private string Description { get; set; }
    private double Latitude { get; set; }
    private double Longitude { get; set; }
    private bool HasSentCase { get; set; }
    private IList<string> ImagesData = new List<string>();

    private async Task SubmitCase()
    {
        await CaseService.CreateCase(Title, Description, ImagesData, string.Empty);

        HasSentCase = true;
    }

    private async Task UpdateImages()
    {
        ImagesData = await ImageUpload.GetFilesUploaded(_input);
    }

    private async Task GetLatLong()
    {
        GeolocationResult geoLocation = await GeoLocationService.GetCoords();
        Latitude = geoLocation.Location.Coords.Latitude;
        Longitude = geoLocation.Location.Coords.Longitude;


    }
}