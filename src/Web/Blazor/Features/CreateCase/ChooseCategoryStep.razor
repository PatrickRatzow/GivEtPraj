@inherits Step
@using Commentor.GivEtPraj.Blazor.Components;
@using Commentor.GivEtPraj.WebApi.Contracts.Requests
@using Commentor.GivEtPraj.Application.Contracts
@using Commentor.GivEtPraj.Blazor.Services
@inject ICategoryService _categoryService

<div class="transition-all flex flex-col mr-8 @Offset">
    <Header Title="Vælg Kategori" Icon="fas fa-chevron-left" OnBackClicked="Parent.PreviousPage"></Header>

    <div class="w-[calc(100vw-2rem)] mt-10 grid gap-y-4 grid-rows-1">
        <LoadingSpinner Loading="_loading">
            <TextField ValueChanged="FilterCategories" Title="Søg"></TextField>
            @foreach (var category in _filteredCategories)
            {
                <ItemRow
                    IsSelected="category.Name == Model.Category"
                    Title="@category.Name"
                    Icon="@category.Icon"
                    OnClick="() => SelectCategory(category.Name)">
                </ItemRow>
            }
        </LoadingSpinner>
    </div>
</div>

@code
{
    [Parameter] public CreateCaseRequest Model { get; set; } = null!;

    private bool _loading;
    private List<CategoryDto> _categories = new();
    private List<CategoryDto> _filteredCategories = new();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _categories = await _categoryService.GetAllCategories();
    //_loading = false;
        _filteredCategories = _categories;
    }

    private void FilterCategories(string search)
    {
        if (string.IsNullOrWhiteSpace(search))
        {
            _filteredCategories = _categories;

            return;
        }

        _filteredCategories = _categories
            .Where(c => c.Name.ToLowerInvariant().Contains(search.ToLowerInvariant()))
            .ToList();
    }

    private void SelectCategory(string category)
    {
        Model.Category = category;

        Parent.NextPage();
    }
}
