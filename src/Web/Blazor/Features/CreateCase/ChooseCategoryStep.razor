@inherits Step
@using Commentor.GivEtPraj.Blazor.Components;
@using Commentor.GivEtPraj.WebApi.Contracts.Requests
@using Commentor.GivEtPraj.Application.Contracts
@using Commentor.GivEtPraj.Blazor.Services
@inject ICategoryService _categoryService
@implements IDisposable

<div class="transition-all flex flex-col mr-8 @Offset">
    <Header Title="Vælg Kategori" Icon="fas fa-chevron-left" OnBackClicked="Parent.PreviousPage"></Header>

    <div class="w-[calc(100vw-2rem)] mt-10 grid gap-y-4 grid-rows-1">
        <TextField ValueChanged="FilterCategories" Title="Søg"></TextField>
        @foreach (var category in _filteredCategories)
        {
            <ItemRow IsSelected="category.Name == Model.Category"
                 Title="@category.Name"
                 Icon="@category.Icon"
                 OnClick="() => SelectCategory(category.Name)">
            </ItemRow>
        }
    </div>
</div>

@code
{
    [Parameter] public CreateCaseRequest Model { get; set; } = null!;
    private List<CategoryDto> _filteredCategories = new();

    protected override void OnInitialized()
    {
        _categoryService.OnChange += StateHasChanged;
        
        // Repopulate filtered categories
        FilterCategories(string.Empty);
        
        base.OnInitialized();
    }

    public void Dispose()
    {
        _categoryService.OnChange -= StateHasChanged;
    }

    private void FilterCategories(string search)
    {
        if (string.IsNullOrWhiteSpace(search))
        {
            _filteredCategories = _categoryService.Categories;

            return;
        }

        _filteredCategories = _categoryService.Categories
            .Where(c => c.Name.ToLowerInvariant().Contains(search.ToLowerInvariant()))
            .ToList();
    }

    private void SelectCategory(string category)
    {
        Model.Category = category;

        Parent.NextPage();
    }
}
